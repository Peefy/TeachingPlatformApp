<Controls:MetroWindow
    x:Class="TeachingPlatformApp.Views.FlightMapWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:mycon="clr-namespace:TeachingPlatformApp.Converters"
    xmlns:myctrls="clr-namespace:TeachingPlatformApp.Controls"
    xmlns:prism="http://prismlibrary.com/"
    x:Name="Window"
    Title="{Binding Title}"
    BorderThickness="1"
    GlowBrush="Black"
    Keyboard.KeyDown="Window_KeyDown"
    Keyboard.KeyUp="Window_KeyUp"
    Mouse.MouseWheel="Window_MouseWheel"
    SizeChanged="Window_SizeChanged"
    StateChanged="Window_StateChanged"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    WindowTransitionsEnabled="False"
    Topmost="True">
    <!--  prism:ViewModelLocator.AutoWireViewModel="True"  -->
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <mycon:PositionToMarginConverter x:Key="PositionToMarginConverter" />
            <mycon:SetPointsToPathFigureConverter x:Key="SetPointsToPathFigureConverter" />
            <mycon:SetPointToRealMarginPointConverter x:Key="SetPointToRealMarginPointConverter" />
            <mycon:NullToVisiblyConverter x:Key="NullToVisiblyConverter" />
            <mycon:BoolToVisiblyConverter x:Key="BoolToVisiblyConverter" />
            <mycon:TrailPointsToPathFigureConverter x:Key="TrailPointsToPathFigureConverter" />
            <mycon:MarginLeftTopToPointXY x:Key="MarginLeftTopToPointXY" />
        </ResourceDictionary>
    </Controls:MetroWindow.Resources>
    <Grid x:Name="fatherGrid">
        <Grid.RenderTransform>
            <ScaleTransform />
        </Grid.RenderTransform>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
        </Grid.RowDefinitions>
        <myctrls:GridAxes
            x:Name="gridAxes"
            Grid.Row="0"
            Width="2000"
            Height="2000"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="Beige">
            <Grid Margin="{Binding DrawMargin}">
                <myctrls:CanvasTrail />
                <myctrls:CanvasTrail />
                <myctrls:CanvasTrail />
                <myctrls:CanvasTrail />
                <myctrls:Helicopter
                    Width="1"
                    Height="1"
                    Margin="{Binding Helicopter.MyMapPosition, Converter={StaticResource PositionToMarginConverter}}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Panel.ZIndex="0">
                    <myctrls:Helicopter.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                            <RotateTransform Angle="{Binding Helicopter.Angle}" />
                        </TransformGroup>
                    </myctrls:Helicopter.RenderTransform>
                </myctrls:Helicopter>
                <myctrls:Flighter
                    Width="1"
                    Height="1"
                    Margin="{Binding Flighter.MyMapPosition, Converter={StaticResource PositionToMarginConverter}}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Panel.ZIndex="0">
                    <myctrls:Flighter.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                            <RotateTransform Angle="{Binding Flighter.Angle}" />
                        </TransformGroup>
                    </myctrls:Flighter.RenderTransform>
                </myctrls:Flighter>
                <myctrls:Flighter2
                    Width="1"
                    Height="1"
                    Margin="{Binding Flighter2.MyMapPosition, Converter={StaticResource PositionToMarginConverter}}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Panel.ZIndex="0">
                    <myctrls:Flighter.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                            <RotateTransform Angle="{Binding Flighter2.Angle}" />
                        </TransformGroup>
                    </myctrls:Flighter.RenderTransform>
                </myctrls:Flighter2>
                <myctrls:Missile
                    Width="1"
                    Height="1"
                    Margin="{Binding Missile.MyMapPosition, Converter={StaticResource PositionToMarginConverter}}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Panel.ZIndex="0"
                    Visibility="{Binding Missile.IsVisible, Converter={StaticResource BoolToVisiblyConverter}}">
                    <myctrls:Missile.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                            <RotateTransform Angle="{Binding Missile.Angle}" />
                        </TransformGroup>
                    </myctrls:Missile.RenderTransform>
                </myctrls:Missile>
            </Grid>
            <Canvas Margin="{Binding DrawMargin}">
                <TextBlock
                    Margin="{Binding SetPoints[0], Converter={StaticResource PositionToMarginConverter}}"
                    FontSize="{Binding SetPointsFontSize}"
                    Text="航路点1"
                    Visibility="{Binding HasSetPoints[0], Converter={StaticResource BoolToVisiblyConverter}}" />
                <TextBlock
                    Margin="{Binding SetPoints[1], Converter={StaticResource PositionToMarginConverter}}"
                    FontSize="{Binding SetPointsFontSize}"
                    Text="航路点2"
                    Visibility="{Binding HasSetPoints[1], Converter={StaticResource BoolToVisiblyConverter}}" />
                <TextBlock
                    Margin="{Binding SetPoints[2], Converter={StaticResource PositionToMarginConverter}}"
                    FontSize="{Binding SetPointsFontSize}"
                    Text="航路点3"
                    Visibility="{Binding HasSetPoints[2], Converter={StaticResource BoolToVisiblyConverter}}" />
                <TextBlock
                    Margin="{Binding SetPoints[3], Converter={StaticResource PositionToMarginConverter}}"
                    FontSize="{Binding SetPointsFontSize}"
                    Text="航路点4"
                    Visibility="{Binding HasSetPoints[3], Converter={StaticResource BoolToVisiblyConverter}}" />
                <TextBlock
                    Margin="{Binding SetPoints[4], Converter={StaticResource PositionToMarginConverter}}"
                    FontSize="{Binding SetPointsFontSize}"
                    Text="航路点5"
                    Visibility="{Binding HasSetPoints[4], Converter={StaticResource BoolToVisiblyConverter}}" />
                <TextBlock
                    Margin="{Binding SetPoints[5], Converter={StaticResource PositionToMarginConverter}}"
                    FontSize="{Binding SetPointsFontSize}"
                    Text="航路点6"
                    Visibility="{Binding HasSetPoints[5], Converter={StaticResource BoolToVisiblyConverter}}" />
                <TextBlock
                    Margin="{Binding SetPoints[6], Converter={StaticResource PositionToMarginConverter}}"
                    FontSize="{Binding SetPointsFontSize}"
                    Text="航路点7"
                    Visibility="{Binding HasSetPoints[6], Converter={StaticResource BoolToVisiblyConverter}}" />
                <Path Stroke="Yellow" StrokeThickness="{Binding SetPointsLineWidth}">
                    <Path.Data>
                        <PathGeometry Figures="{Binding SetPoints, Converter={StaticResource SetPointsToPathFigureConverter}}" />
                    </Path.Data>
                </Path>
                <Path
                    Fill="Purple"
                    Stroke="Purple"
                    StrokeThickness="5"
                    Visibility="{Binding HasSetPoints[0], Converter={StaticResource BoolToVisiblyConverter}}">
                    <Path.Data>
                        <EllipseGeometry
                            Center="{Binding SetPoints[0], Converter={StaticResource SetPointToRealMarginPointConverter}}"
                            RadiusX="{Binding SetPointsEllipseRadius}"
                            RadiusY="{Binding SetPointsEllipseRadius}" />
                    </Path.Data>
                </Path>
                <Path
                    Fill="Purple"
                    Stroke="Purple"
                    StrokeThickness="5"
                    Visibility="{Binding HasSetPoints[1], Converter={StaticResource BoolToVisiblyConverter}}">
                    <Path.Data>
                        <EllipseGeometry
                            Center="{Binding SetPoints[1], Converter={StaticResource SetPointToRealMarginPointConverter}}"
                            RadiusX="{Binding SetPointsEllipseRadius}"
                            RadiusY="{Binding SetPointsEllipseRadius}" />
                    </Path.Data>
                </Path>
                <Path
                    Fill="Purple"
                    Stroke="Purple"
                    StrokeThickness="5"
                    Visibility="{Binding HasSetPoints[2], Converter={StaticResource BoolToVisiblyConverter}}">
                    <Path.Data>
                        <EllipseGeometry
                            Center="{Binding SetPoints[2], Converter={StaticResource SetPointToRealMarginPointConverter}}"
                            RadiusX="{Binding SetPointsEllipseRadius}"
                            RadiusY="{Binding SetPointsEllipseRadius}" />
                    </Path.Data>
                </Path>
                <Path
                    Fill="Purple"
                    Stroke="Purple"
                    StrokeThickness="5"
                    Visibility="{Binding HasSetPoints[3], Converter={StaticResource BoolToVisiblyConverter}}">
                    <Path.Data>
                        <EllipseGeometry
                            Center="{Binding SetPoints[3], Converter={StaticResource SetPointToRealMarginPointConverter}}"
                            RadiusX="{Binding SetPointsEllipseRadius}"
                            RadiusY="{Binding SetPointsEllipseRadius}" />
                    </Path.Data>
                </Path>
                <Path
                    Fill="Purple"
                    Stroke="Purple"
                    StrokeThickness="5"
                    Visibility="{Binding HasSetPoints[4], Converter={StaticResource BoolToVisiblyConverter}}">
                    <Path.Data>
                        <EllipseGeometry
                            Center="{Binding SetPoints[4], Converter={StaticResource SetPointToRealMarginPointConverter}}"
                            RadiusX="{Binding SetPointsEllipseRadius}"
                            RadiusY="{Binding SetPointsEllipseRadius}" />
                    </Path.Data>
                </Path>
                <Path
                    Fill="Purple"
                    Stroke="Purple"
                    StrokeThickness="5"
                    Visibility="{Binding HasSetPoints[5], Converter={StaticResource BoolToVisiblyConverter}}">
                    <Path.Data>
                        <EllipseGeometry
                            Center="{Binding SetPoints[5], Converter={StaticResource SetPointToRealMarginPointConverter}}"
                            RadiusX="{Binding SetPointsEllipseRadius}"
                            RadiusY="{Binding SetPointsEllipseRadius}" />
                    </Path.Data>
                </Path>
                <Path
                    Fill="Purple"
                    Stroke="Purple"
                    StrokeThickness="5"
                    Visibility="{Binding HasSetPoints[6], Converter={StaticResource BoolToVisiblyConverter}}">
                    <Path.Data>
                        <EllipseGeometry
                            Center="{Binding SetPoints[6], Converter={StaticResource SetPointToRealMarginPointConverter}}"
                            RadiusX="{Binding SetPointsEllipseRadius}"
                            RadiusY="{Binding SetPointsEllipseRadius}" />
                    </Path.Data>
                </Path>
            </Canvas>
        </myctrls:GridAxes>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Column="0"
                Margin="1"
                Orientation="Horizontal">
                <myctrls:Flighter Margin="25,16,13,0">
                    <myctrls:Flighter.RenderTransform>
                        <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                    </myctrls:Flighter.RenderTransform>
                </myctrls:Flighter>
                <Label
                    VerticalAlignment="Center"
                    Content="{Binding Flighter.LocationString}"
                    FontFamily="Times New Roman"
                    FontSize="{Binding LocationStringFontSize}" />
            </StackPanel>
            <StackPanel
                Grid.Column="1"
                Margin="1"
                Orientation="Horizontal">
                <myctrls:Helicopter x:Name="myHelicopeter" Margin="25,15,13,0">
                    <myctrls:Helicopter.RenderTransform>
                        <ScaleTransform ScaleX="0.5" ScaleY="0.4" />
                    </myctrls:Helicopter.RenderTransform>
                </myctrls:Helicopter>
                <Label
                    VerticalAlignment="Center"
                    Content="{Binding Helicopter.LocationString}"
                    FontFamily="Times New Roman"
                    FontSize="{Binding LocationStringFontSize}" />
            </StackPanel>
        </Grid>
        <StackPanel
            Grid.Row="2"
            Margin="1"
            Orientation="Horizontal">
            <myctrls:Flighter2 Margin="25,16,13,0">
                <myctrls:Flighter2.RenderTransform>
                    <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                </myctrls:Flighter2.RenderTransform>
            </myctrls:Flighter2>
            <Label
                VerticalAlignment="Center"
                Content="{Binding Flighter2.LocationString}"
                FontFamily="Times New Roman"
                FontSize="{Binding LocationStringFontSize}" />
        </StackPanel>
        <StackPanel Grid.Row="3" Orientation="Horizontal">
            <Label
                Margin="16,0,0,0"
                VerticalAlignment="Center"
                Content="X:"
                FontSize="{Binding LocationStringFontSize}" />
            <myctrls:NumuricTextBlock
                x:Name="xTextBox"
                MinWidth="100"
                VerticalAlignment="Center"
                FontSize="{Binding LocationStringFontSize}"
                IsEnabled="False"
                Text="{Binding DrawMargin.Left, Converter={StaticResource MarginLeftTopToPointXY}}" />
            <Label
                Margin="10,0,0,0"
                VerticalAlignment="Center"
                Content="Y:"
                FontSize="{Binding LocationStringFontSize}" />
            <myctrls:NumuricTextBlock
                x:Name="yTextBox"
                MinWidth="100"
                VerticalAlignment="Center"
                FontSize="{Binding LocationStringFontSize}"
                IsEnabled="False"
                Text="{Binding DrawMargin.Top, Converter={StaticResource MarginLeftTopToPointXY}}" />
        </StackPanel>
    </Grid>
</Controls:MetroWindow>
